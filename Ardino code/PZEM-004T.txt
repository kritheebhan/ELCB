#include <PZEM004Tv30.h>


// Use Serial2 on ESP32 with custom TX/RX pins
HardwareSerial mySerial(2);
PZEM004Tv30 pzem1(mySerial, 26, 25); // GPIO26 (RX2) to TX PZEM004; GPIO25 (TX2) to RX PZEM004

float VOLTAGE, CURRENT, POWER, energy1, Freq, pf1, va1, VAR1;

void setup() {
    Serial.begin(115200);
    Serial.println("\nPZEM004T Testing on ESP32");
    
    // Start Serial2 for communication with PZEM
    mySerial.begin(9600, SERIAL_8N1, 26, 25);
}

void loop() {
    VOLTAGE = zeroIfNan(pzem1.voltage());
    CURRENT = zeroIfNan(pzem1.current());
    POWER = zeroIfNan(pzem1.power());
    energy1 = zeroIfNan(pzem1.energy() / 1000); // Convert to kWh
    Freq = zeroIfNan(pzem1.frequency());
    pf1 = zeroIfNan(pzem1.pf());

    if (pf1 == 0) {
        va1 = 0;
        VAR1 = 0;
    } else {
        va1 = POWER / pf1;
        VAR1 = POWER / pf1 * sqrt(1 - sq(pf1));
    }

    delay(1000);

    Serial.println("");
    Serial.printf("Voltage        : %.2f V\n", VOLTAGE);
    Serial.printf("Current        : %.2f A\n", CURRENT);
    Serial.printf("Power Active   : %.2f W\n", POWER);
    Serial.printf("Frequency      : %.2f Hz\n", Freq);
    Serial.printf("Cosine Phi     : %.2f PF\n", pf1);
    Serial.printf("Energy         : %.2f kWh\n", energy1);
    Serial.printf("Apparent Power : %.2f VA\n", va1);
    Serial.printf("Reactive Power : %.2f VAR\n", VAR1);
    Serial.println("---------- END ----------");
}

float zeroIfNan(float v) {
    return isnan(v) ? 0 : v;
}